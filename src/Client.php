<?php

/*
 * (c) Jérémy Marodon <marodon.jeremy@gmail.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Th3Mouk\FreeMobileSMSNotif;

use GuzzleHttp\Client as GuzzleClient;
use GuzzleHttp\ClientInterface as GuzzleClientInterface;
use GuzzleHttp\Exception\RequestException;

final class Client implements ClientInterface
{
    /**
     * URL to contact Free Mobile API.
     */
    const API_URL = 'https://smsapi.free-mobile.fr/sendmsg';

    /**
     * Login to connect at the Free Mobile API.
     *
     * @var string
     */
    private $login;

    /**
     * Authentication key generated by the Free Mobile web interface.
     *
     * @var string
     */
    private $key;

    /**
     * HTTP Client to communicate throught the web.
     *
     * @var GuzzleClient
     */
    private $httpClient;

    /**
     * Client constructor.
     *
     * @param string $login
     * @param string $key
     */
    public function __construct($login, $key)
    {
        $this->login = $login;
        $this->key = $key;
        $this->httpClient = new GuzzleClient();
    }

    /**
     * {@inheritdoc}
     */
    public function send($message)
    {
        try {
            return $this->httpClient->post(self::API_URL, [
                'query' => [
                    'user' => $this->login,
                    'pass' => $this->key,
                    'msg' => (string) $message,
                ],
            ]);
        } catch (RequestException $exception) {
            return $exception->getResponse();
        }
    }

    /**
     * @return string
     */
    public function getLogin()
    {
        return $this->login;
    }

    /**
     * @return string
     */
    public function getkey()
    {
        return $this->key;
    }

    /**
     * @return GuzzleClient
     */
    public function getHttpClient()
    {
        return $this->httpClient;
    }

    /**
     * @param GuzzleClientInterface $httpClient
     */
    public function setHttpClient(GuzzleClientInterface $httpClient)
    {
        $this->httpClient = $httpClient;
    }
}
